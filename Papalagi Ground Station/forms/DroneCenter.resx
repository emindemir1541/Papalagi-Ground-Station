<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnARENFhr7ckcuAAAESElEQVR4Xu1bW4hNURgel1zKteQS
        pZQot0gplEieKIlQeJQ8eCRSa5/NMOfsdZujESEeXDKPyAOFREmKF0VRFFHkFrnP8a21/zPtYZs5Z4x9
        Zu2zv/o753z/Zf3nm7P2WvsyDV2BMdY3p4JDOcU/wkrdtO85za+wQmEslXUHTPFVMV+oW+Zp3kJl3YGv
        xHb6AheZUpO6Y77ku0wN1LpMZd1BTgc7SIBWoqqGr/jmTIBMAAcEyAmxGEd831P8cNnQ+C0S4HGUr8Zy
        SlynGs868JrznBZrsdIMohZqg0alxkWarIGJp74qLKB2kgVraRmCJu5TM99g5zwVBGiq6X+bp8UpjPeK
        xv7IdDCT2koOvua7qYG3TBXmEJ0YWBCMxti3bQ/YLBGdHDCw/ev7OthGVOJgzcF0K4DibYnvFjHoFyuA
        ELOIqgnQg50KrJkvJCoZmEHtwNixEVUToIfHYR/BUqKSQSZAJkAmQCZATwmAzQ1DrbusmJ9AVMVwXgDW
        LOajzs+wFl9NdMVAnrsC4GSmP2rcK9fCCc4aclUM5LkrAM4gd5brWKsnAUwe5v4nqmOnQF0JgNwLVMOc
        0Ny17+tFAOStp/zvOJeYjdc79nM9CNDU1DQcec9tvuQFw+F9/QhAN0uQK56aiyohVycC+DqYh5zwgCeD
        FUTXhwDRNd9T/CzRFuDSL0BkzX+/V8rxRFuAS7cAezmfiFh7k9SXfCvR7QCfbgEQ177mt7a29iO6HeDT
        KwBiOqz5RHcAfOkUILrm48CXJ/oPwJ9OAeLW/DggJn0CMCnnwh+u+Yq/g5lG2y26FOJzKIDiL8v+iD30
        tdhEoX+AYnqfAPCV5/5fDbkjTKyv+Pk4f8RO2KIxgK93CmBgdn6msY7GV5Zz9x/cP9LEsWJxGHxLonH4
        hRy3cZp/3tNcmGwLxgAxvVeAOJgvXc4tC/A7GrUeA/8bE2PuQRIdC8SkTwD4Tocx4kGxWBxIdCwQly4B
        mCwsI3+befCC6L8CcekRQEo5GPwj48Mx4AjRnQKx6REAP/l95HvFOB9FdKdAbDoEoHv95kkTHPjEBqK7
        BOLdFyB8rFbcMBz2BFdLpVIfG1wBkOO+ADhF3kLclz06P8UGVgjkuC1ANWt+HJDntgCeFmfCz12v+XFA
        rrsC+DJYR+8rWvPjgFx3BcA+/4V9leIouasG8h0WwJp4XemaHwfUcF0AvpFc3QLyXRYguFbNmh8H1HFL
        AGx6BiDvA376nzo7z68UzglggDk/1Rh9/Cc4KUBPIhMgEyAToGYCtJmBe+JI/i9AD09IgCVEJQMMam5i
        lJgWy4lKHPl8fih6+GH68KWcRnQyoP/bwTQQN+Lu+CYBT/PGsAf+3FxUIToZQPEZGPirbUDym+aRFzMd
        zDHhfxvGXuQpfgxj22loLqhQW8kCg5vbX6EINTJPigPUTm1AFzNPwsJH35Kxt7BL0QetkkVDwy9UyN4J
        reb0lAAAAABJRU5ErkJggg==
</value>
  </data>
</root>